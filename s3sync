#!/bin/bash

# kill running process and write new pid
test -f .s3sync-pid && kill -9 $(cat .s3sync-pid) 2>/dev/null
echo $$ > .s3sync-pid

#config
BUCKET=mbeumer-laptop-backup

# set IFS
oldifs=$IFS
IFS=$'\n'

# get all the timestamps we need
# TODO: can be shorter
# TODO: do stamps based on file timestamp
touch .s3sync-current-stamp
touch .s3sync-synced-stamp
read current < .s3sync-current-stamp
read synced < .s3sync-synced-stamp
today=`date '+%Y%m%d'`

# Prepare the folder structure
if [ "$current" = "$today" ]
then
    # If we already have a current directory for today we do nothing
    echo "File structure already in place"
else
    # If we don't, we create the file structure
    echo "Creating file structure"
    dirlist=$(mdfind 'kMDItemFSLabel == 2')
    test ! -d .s3sync-current && mkdir .s3sync-current || rm -rf .s3sync-current/*
    #eval "cp -r $(printf '"%s" ' $dirlist).s3sync-current" 
    eval "find $(printf '"%s" ' $dirlist) | cpio -pad .s3sync-current --quiet 2>&1 | xargs echo $1 > /dev/null"
    echo $today > .s3sync-current-stamp
fi

# Sync data with cloud
if [ "$synced" == "$today" ]; then
    # If it is already done, we do nothing
    echo "Daily sync is already done."
else
    # Sync in case we stil have to sync today
    echo "Syncing..."
    
    # Sync and append output to output file
    read result < <(s3cmd sync .s3sync-current/ s3://$BUCKET/ --delete-removed 2>&1)
    
    # And check if we are done, and ff so,
    # set a new synced.stamp so the next round will not sync.
    test "$result" = "" && echo $today > .s3sync-synced-stamp
fi

# clean pid file
rm .s3sync-pid
